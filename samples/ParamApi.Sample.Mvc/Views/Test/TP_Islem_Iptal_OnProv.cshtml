@model TP_Islem_Iptal_OnProv_TestModel

@{
    ViewData["Title"] = "TP_Islem_Iptal_OnProv Test";
}

<div class="row">
    <div class="col-md-3">
        <partial name="_TestSidebar" />
    </div>
    <div class="col-md-9">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title mb-0">
                    <i class="fas fa-times-circle text-danger"></i> 
                    TP_Islem_Iptal_OnProv - Ön Provizyon İptal
                </h4>
                <small class="text-muted">Satış işlemi yapılmamış provizyon iptali</small>
            </div>
            <div class="card-body">
                <!-- Bilgilendirme -->
                <div class="alert alert-warning">
                    <h6><i class="fas fa-exclamation-triangle"></i> İşlem Hakkında</h6>
                    <ul class="mb-0">
                        <li>Bu işlem, daha önce oluşturulan ön provizyon işlemini tamamen iptal eder</li>
                        <li>Sadece satış işlemi yapılmamış (kapanmamış) provizyonlar iptal edilebilir</li>
                        <li>Provizyon ID opsiyoneldir, boş bırakılabilir</li>
                        <li>Sipariş ID ile de işlem yapılabilir</li>
                        <li><strong>Dikkat:</strong> İptal edilen provizyon geri alınamaz!</li>
                    </ul>
                </div>

                <form asp-action="TP_Islem_Iptal_OnProv" method="post" class="needs-validation" novalidate>
                    @Html.AntiForgeryToken()
                    
                    <div class="row">
                        <div class="col-md-6">
                            <!-- Provizyon Bilgileri -->
                            <div class="card">
                                <div class="card-header bg-danger text-white">
                                    <h6 class="mb-0"><i class="fas fa-info-circle"></i> İptal Bilgileri</h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label asp-for="Prov_ID" class="form-label">Provizyon ID</label>
                                        <input asp-for="Prov_ID" class="form-control" placeholder="Opsiyonel - Boş bırakılabilir">
                                        <div class="form-text">İptal edilecek ön provizyon ID'si</div>
                                        <span asp-validation-for="Prov_ID" class="text-danger"></span>
                                    </div>

                                    <div class="mb-3">
                                        <label asp-for="Siparis_ID" class="form-label">Sipariş ID <span class="text-danger">*</span></label>
                                        <input asp-for="Siparis_ID" class="form-control" required>
                                        <div class="form-text">Ön provizyon işleminde kullanılan sipariş ID'si</div>
                                        <span asp-validation-for="Siparis_ID" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <!-- Test Senaryoları -->
                            <div class="card">
                                <div class="card-header bg-info text-white">
                                    <h6 class="mb-0"><i class="fas fa-lightbulb"></i> Test Senaryoları</h6>
                                </div>
                                <div class="card-body">
                                    <div class="alert alert-danger">
                                        <h6><i class="fas fa-exclamation-triangle"></i> Dikkat!</h6>
                                        <p class="mb-2">Bu işlem için önce bir ön provizyon işlemi yapılmış olmalıdır:</p>
                                        <ol class="mb-0">
                                            <li>TP_WMD_UCD veya TP_Islem_Odeme_OnProv_WMD ile ön provizyon oluşturun</li>
                                            <li>Başarılı provizyon sonucundaki Sipariş ID'sini kullanın</li>
                                            <li><strong>Önemli:</strong> Provizyon daha önce kapatılmamış olmalı!</li>
                                            <li>İsteğe bağlı olarak Provizyon ID'sini de kullanabilirsiniz</li>
                                        </ol>
                                    </div>

                                    <div class="d-grid gap-2">
                                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="fillSampleData()">
                                            <i class="fas fa-magic"></i> Örnek Veri Doldur
                                        </button>
                                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="generateOrderId()">
                                            <i class="fas fa-refresh"></i> Yeni Sipariş ID Oluştur
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- İşlem Butonları -->
                            <div class="card mt-3">
                                <div class="card-body">
                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-danger btn-lg" onclick="return confirm('Ön provizyon iptal işlemini başlatmak istediğinizden emin misiniz? Bu işlem geri alınamaz!')">
                                            <i class="fas fa-times-circle"></i> Ön Provizyon İptal İşlemini Başlat
                                        </button>
                                        <a href="@Url.Action("Index", "Test")" class="btn btn-secondary">
                                            <i class="fas fa-arrow-left"></i> Geri Dön
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Örnek veri doldurma
        function fillSampleData() {
            document.querySelector('[name="Siparis_ID"]').value = 'ONPROV_TEST_' + new Date().getTime();
            
            // Bootstrap toast ile bilgi ver
            showToast('Örnek veriler dolduruldu!', 'info');
        }

        // Yeni sipariş ID oluştur
        function generateOrderId() {
            const now = new Date();
            const timestamp = now.getFullYear().toString() +
                            (now.getMonth() + 1).toString().padStart(2, '0') +
                            now.getDate().toString().padStart(2, '0') +
                            now.getHours().toString().padStart(2, '0') +
                            now.getMinutes().toString().padStart(2, '0') +
                            now.getSeconds().toString().padStart(2, '0');
            
            document.querySelector('[name="Siparis_ID"]').value = 'ONPROV_IPTAL_' + timestamp;
            showToast('Yeni sipariş ID oluşturuldu!', 'success');
        }

        // Toast gösterme fonksiyonu
        function showToast(message, type = 'info') {
            const toastContainer = document.getElementById('toast-container') || createToastContainer();
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">${message}</div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            // Toast otomatik temizleme
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }

        // Toast container oluşturma
        function createToastContainer() {
            const container = document.createElement('div');
            container.id = 'toast-container';
            container.className = 'toast-container position-fixed bottom-0 end-0 p-3';
            document.body.appendChild(container);
            return container;
        }
    </script>
} 